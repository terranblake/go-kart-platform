syntax = "proto3";

package kart.lights;

// Light component IDs
enum LightComponentId {
  FRONT = 0;
  REAR = 1;
  INTERIOR = 4;
//   currently brake lights are the same component as front/rear
//   BRAKE = 5;
//   INDICATOR = 6;
//   hazard is a mode 
//   HAZARD = 7;
  AUXILIARY = 8;
  UNDERGLOW = 9;

//   todo: somehow need to make this a global concept, but 255 would be reserved for comptype-specific broadcasted messages 
  ALL = 255;
}

// Light command IDs
enum LightCommandId {
  MODE = 0;
  SIGNAL = 1; // turn signals
  INTENSITY = 2;
  PATTERN = 3;
  COLOR = 4;
  DURATION = 5;
  TOGGLE = 6;
  SEQUENCE = 7;
  BRAKE = 8;
  LOCATION = 9; // lights that share code can set this to determine where on the kart they are
  TEST = 10; // For testing light functions
  ANIMATION_CONTROL = 11; // Animation control command (start/stop/pause)
  ANIMATION_DATA = 12; // Animation frame data
  ANIMATION_CONFIG = 13; // Animation configuration (FPS, loop, etc)
}

// Light mode values
enum LightModeValue {
  OFF = 0;
  ON = 1;
  AUTO = 2;
  DIM = 3;
  BRIGHT = 4;
  FLASH = 5;
  PULSE = 6;
  FADE = 7;
  HAZARD = 8;
  ANIMATION = 9; // Animation mode (for playing animation frames)
}

enum LightSignalValue {
    NONE = 0;
    LEFT = 1;
    RIGHT = 2;
}

// Light pattern values
enum LightPatternValue {
  SOLID = 0;
  BLINK_SLOW = 1;
  BLINK_FAST = 2;
  STROBE = 3;
  WAVE = 4;
  CHASE = 5;
  SOS = 6;
}

// Light color values
enum LightColorValue {
  WHITE = 0;
  RED = 1;
  GREEN = 2;
  BLUE = 3;
  AMBER = 4;
  PURPLE = 5;
  CYAN = 6;
  CUSTOM = 7;
}

// Light sequence values
enum LightSequenceValue {
  SEQ1 = 0;
  SEQ2 = 1;
  SEQ3 = 2;
  SEQ4 = 3;
  RANDOM = 4;
}

// Animation command values
enum AnimationCommandValue {
  ANIM_STOP = 0;
  ANIM_PLAY = 1;
  ANIM_PAUSE = 2;
  ANIM_RESET = 3;
  ANIM_NEXT_FRAME = 4;
  ANIM_PREV_FRAME = 5;
}

// Animation config options
enum AnimationConfigValue {
  ANIM_CONFIG_FPS = 0;
  ANIM_CONFIG_LOOP = 1;
  ANIM_CONFIG_BRIGHTNESS = 2;
  ANIM_CONFIG_LED_COUNT = 3;
}