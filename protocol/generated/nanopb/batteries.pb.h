/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_KART_BATTERIES_BATTERIES_PB_H_INCLUDED
#define PB_KART_BATTERIES_BATTERIES_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* Battery component IDs */
typedef enum _kart_batteries_BatteryComponentId {
    kart_batteries_BatteryComponentId_ACCESSORY = 0,
    kart_batteries_BatteryComponentId_MOTOR_LEFT_REAR = 1,
    kart_batteries_BatteryComponentId_MOTOR_RIGHT_REAR = 2,
    kart_batteries_BatteryComponentId_MOTOR_LEFT_FRONT = 3,
    kart_batteries_BatteryComponentId_MOTOR_RIGHT_FRONT = 4,
    kart_batteries_BatteryComponentId_ALL = 255 /* All batteries (broadcast) */
} kart_batteries_BatteryComponentId;

/* Battery command IDs */
typedef enum _kart_batteries_BatteryCommandId {
    kart_batteries_BatteryCommandId_VOLTAGE = 0,
    kart_batteries_BatteryCommandId_CURRENT = 1,
    kart_batteries_BatteryCommandId_TEMPERATURE = 2
} kart_batteries_BatteryCommandId;

#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _kart_batteries_BatteryComponentId_MIN kart_batteries_BatteryComponentId_ACCESSORY
#define _kart_batteries_BatteryComponentId_MAX kart_batteries_BatteryComponentId_ALL
#define _kart_batteries_BatteryComponentId_ARRAYSIZE ((kart_batteries_BatteryComponentId)(kart_batteries_BatteryComponentId_ALL+1))

#define _kart_batteries_BatteryCommandId_MIN kart_batteries_BatteryCommandId_VOLTAGE
#define _kart_batteries_BatteryCommandId_MAX kart_batteries_BatteryCommandId_TEMPERATURE
#define _kart_batteries_BatteryCommandId_ARRAYSIZE ((kart_batteries_BatteryCommandId)(kart_batteries_BatteryCommandId_TEMPERATURE+1))


#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
