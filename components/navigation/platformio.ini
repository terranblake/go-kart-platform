[platformio]
src_dir = src

[env:debug]
platform = espressif32
board = esp32dev
framework = arduino
build_flags = -Wall
    -D COMPONENT_TYPE=kart_common_ComponentType_NAVIGATION
    -D PLATFORM_ESP32=1
    -D NODE_ID=4 # Corresponds to kart_common_ComponentType_NAVIGATION
    -D DEBUG_MODE=1
    -D VERBOSE_LOGGING=1 # Optional: Set to 0 to reduce logs
    -g3
    -O0
    -I /Users/terranblake/Documents/go-kart-platform/components/navigation/include/ # Navigation specific includes
    -I /Users/terranblake/Documents/go-kart-platform/components/common/lib/Sensors/src/
    -I /Users/terranblake/Documents/go-kart-platform/components/common/lib/Sensors/variants/
    -I /Users/terranblake/Documents/go-kart-platform/components/common/lib/CrossPlatformCAN/ # Assumes this holds ProtobufCANInterface header
    -I /Users/terranblake/Documents/go-kart-platform/components/common/lib/CrossPlatformCAN/include/
    -I /Users/terranblake/Documents/go-kart-platform/protocol/generated/nanopb/ # Generated protobuf headers
    -I /Users/terranblake/Documents/go-kart-platform/protocol/nanopb/ # Nanopb core headers
    -I /Users/terranblake/Documents/go-kart-platform/protocol/ # Base protocol dir (for includes in protos)
monitor_speed = 115200
build_src_filter = 
    +<main.cpp> # Component main file
    # Common Libraries Source
    +</Users/terranblake/Documents/go-kart-platform/components/common/lib/CrossPlatformCAN/ProtobufCANInterface.cpp>
    +</Users/terranblake/Documents/go-kart-platform/components/common/lib/CrossPlatformCAN/CANInterface.cpp> # If ProtobufCANInterface depends on it
    # Nanopb Source
    +</Users/terranblake/Documents/go-kart-platform/protocol/nanopb/pb_common.c>
    +</Users/terranblake/Documents/go-kart-platform/protocol/nanopb/pb_encode.c>
    +</Users/terranblake/Documents/go-kart-platform/protocol/nanopb/pb_decode.c>
    # Generated Protobuf Source
    +</Users/terranblake/Documents/go-kart-platform/protocol/generated/nanopb/common.pb.c>
    +</Users/terranblake/Documents/go-kart-platform/protocol/generated/nanopb/navigation.pb.c>
lib_deps =
    # CAN Controller
    autowp/autowp-mcp2515
    # Sensor Libraries
    adafruit/Adafruit AHTX0 @ ^2.0.0
    adafruit/Adafruit MPU6050 @ ^2.2.6 
    # MPU6050 dependencies (usually installed automatically): 
    # adafruit/Adafruit Unified Sensor @ ^1.1.14
    # adafruit/Adafruit BusIO @ ^1.16.1
    mikalhart/TinyGPSPlus @ ^1.1.0

# Note: Removed the [env:production] for atmelavr as the navigation component
# currently targets ESP32 based on configuration and library usage.
# If an AVR target is needed later, a similar environment would need to be created,
# ensuring library compatibility for AVR. 